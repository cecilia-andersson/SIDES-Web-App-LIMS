<!DOCTYPE html>
<html>
<head>
    <title>Drug Recommendations</title>
    <link href="../images/SIDES_head_icon.png" rel="icon">
    <style>
        ul {
            list-style-type: none;
            padding: 0;
        }
        li {
            margin-bottom: 10px;
        }
        .lhs {
            color: red;
            font-weight: bold;
        }
        .rhs {
            color: green;
            font-weight: bold;
        }
        .confidence {
            font-weight: bold;
        }
        .drug-name {
            font-style: italic;
        }
        .silhouette {
            display: inline-block;
            font-size: 20px; /* Adjust the size as needed */
        }
        .transparent-silhouette {
            opacity: 0.3;
        }
    </style>
</head>
<body>
    <header>
        <?php
        include "../navigation.php";
        ?>
    </header>
    <h2 id="header"></h2>
    <?php
    error_reporting(E_ALL);
    ini_set('display_errors', 1);

    // Include the FP-Growth implementation classes
    require __DIR__ . '/../vendor/autoload.php';

    // Function to preprocess ratings to binary values (like or dislike)
    function preprocessRatings($rating) {
        return ($rating >= 4) ? 0 : 1;
    }

    // Database connection parameters
    $servername = "localhost";
    $username = "root";
    $password = "root";
    $dbname = "sides";

    // Create a connection
    $link = mysqli_connect($servername, $username, $password, $dbname);
    if (mysqli_connect_error()) {
        die("Connection failed: " . mysqli_connect_error());
    }

    // Create an array to store user transactions (user_id => transaction)
    $transactions = array();

    // Set the minimum support and confidence thresholds
    $minSupport = 1;
    $minConfidence = 0.1;

    // Fetching unique user IDs
    $userQuery = "SELECT DISTINCT userid FROM review";
    $userResult = mysqli_query($link, $userQuery);

    // Initialize the array to store all transactions
    $allTransactions = array();

    // Initialize the $transaction array
    $transaction = array();

    // Fetch user reviews and sort by review date
    while ($userRow = mysqli_fetch_assoc($userResult)) {
        $userId = $userRow['userid'];
        $userTransactions = array(); // Create a new array for this user's transactions

        // Query to fetch user reviews
        $query = "SELECT drug_id, rating, review_date FROM review WHERE userid = $userId ORDER BY review_date ASC";
        $result = mysqli_query($link, $query);
        if ($result) {
            while ($row = mysqli_fetch_assoc($result)) {
                $drug_id = $row["drug_id"];
                $rating = $row["rating"];
                $ratingCategory = preprocessRatings($rating);
                $userTransactions[] = $drug_id . ':' . $ratingCategory;
            }

            // Assign the user's transactions to the $transaction array
            $transaction = $userTransactions;

            mysqli_free_result($result);

            // Add the user's transactions to the overall transactions array
            $allTransactions[] = $userTransactions;
        } else {
            echo "Error fetching user reviews for user ID $userId: " . mysqli_error($link);
        }
    }
    // Create an instance of the FP-Growth class
    $fpgrowth = new \EnzoMC\PhpFPGrowth\FPGrowth($minSupport, $minConfidence);

    // Run the FP-Growth algorithm with all transactions
    $fpgrowth->run($allTransactions);

    // Retrieve and work with the patterns and rules generated by the algorithm
    $patterns = $fpgrowth->getPatterns();
    $rules = $fpgrowth->getRules();

    // Fetch the mapping of drug_id to drug_brand
    $drugIdToBrandMapping = array();
    $mappingQuery = "SELECT drug_id, drug_brand FROM drugs";
    $mappingResult = mysqli_query($link, $mappingQuery);

    if ($mappingResult) {
        while ($row = mysqli_fetch_assoc($mappingResult)) {
            $drugIdToBrandMapping[$row['drug_id']] = $row['drug_brand'];
        }
        mysqli_free_result($mappingResult);
    } else {
        echo "Error fetching drug mapping: " . mysqli_error($link);
    }

    // Create an associative array to store unique rules
    $uniqueRules = array();

    echo '<ul>';

    foreach ($rules as $rule) {
        if (count($rule) >= 2) {
            $LHS = $rule[0];
            $RHS = $rule[1]; // Always consider the first item in the RHS
    
            // Split the LHS into items
            $LHSItems = explode(',', $LHS);
    
            // Initialize flags to check if the rule is what you want (LHS = Dislike and RHS = Like)
            $isDislike = false;
            $isLike = false;
    
            // Initialize the $transaction array for this rule
            $transaction = array();
    
            // Process the LHS (Left Hand Side) items
            $LHSBrands = array();
            $uniqueLHSItems = array(); // To store unique LHS items
    
            foreach ($LHSItems as $item) {
                list($drugId, $rating) = explode(':', $item);
                if (is_numeric($drugId) && !in_array($drugId, $uniqueLHSItems)) {
                    $uniqueLHSItems[] = $drugId; // Add the drug only once to the LHS
                    $brandQuery = "SELECT drug_brand FROM drugs WHERE drug_id = $drugId";
                    $brandResult = mysqli_query($link, $brandQuery);
    
                    if ($brandResult) {
                        $brandRow = mysqli_fetch_assoc($brandResult);
    
                        if (isset($brandRow['drug_brand'])) {
                            $LHSBrands[] = '<span class="drug-name">' . $brandRow['drug_brand'] . '</span>';
                            if ($rating == 1) {
                                $isDislike = true;
                            }
                        }
    
                        mysqli_free_result($brandResult);
                    } else {
                        echo "Error fetching drug brand for drug ID $drugId: " . mysqli_error($link);
                    }
    
                    // Add this item to the $transaction array
                    $transaction[] = $item;
                }
            }
    
            // Process the RHS (Right Hand Side) item
            $RHSBrands = array();
            $isUnexpectedFormatRHS = false;
            $itemParts = explode(':', $RHS);
            if (count($itemParts) === 2) {
                list($drugId, $rating) = $itemParts;
                if (is_numeric($drugId)) {
                    $brandQuery = "SELECT drug_brand FROM drugs WHERE drug_id = $drugId";
                    $brandResult = mysqli_query($link, $brandQuery);
    
                    if ($brandResult) {
                        $brandRow = mysqli_fetch_assoc($brandResult);
    
                        if (isset($brandRow['drug_brand'])) {
                            $RHSBrands[] = '<span class="drug-name">' . $brandRow['drug_brand'] . '</span>';
                            if ($rating == 0) {
                                $isLike = true;
                            }
                        }
    
                        mysqli_free_result($brandResult);
                    } else {
                        echo "Error fetching drug brand for drug ID $drugId: " . mysqli_error($link);
                    }
    
                    // Add this item to the $transaction array
                    $transaction[] = $RHS;
                }
            } else {
                $isUnexpectedFormatRHS = true;
            }
    
            if (!$isUnexpectedFormatRHS) {
                // Calculate the "Satisfaction Confidence" manually
                $numerator = 0;
                $denominator = 0;
    
                // Check if LHS (Left Hand Side) items are disliked
                $lhsDisliked = true;
    
                foreach ($LHSItems as $item) {
                    list($drugId, $rating) = explode(':', $item);
                    $found = false;
    
                    foreach ($transaction as $transItem) {
                        list($transDrugId, $transRating) = explode(':', $transItem);
                        if ($transDrugId == $drugId && $transRating == 1) {
                            $found = true;
                            break;
                        }
                    }
    
                    if (!$found) {
                        $lhsDisliked = false;
                        break;
                    }
                }
    
                if ($lhsDisliked) {
                    // Check if RHS (Right Hand Side) item is liked
                    $rhsLiked = false;
    
                    list($drugId, $rating) = explode(':', $RHS);
                    $found = false;
    
                    foreach ($transaction as $transItem) {
                        list($transDrugId, $transRating) = explode(':', $transItem);
                        if ($transDrugId == $drugId && $transRating == 0) {
                            $found = true;
                            break;
                        }
                    }
    
                    if ($found) {
                        $rhsLiked = true;
                    }
    
                    // Increment the denominator
                    $denominator++;
    
                    // Increment the numerator if RHS is liked
                    if ($rhsLiked) {
                        $numerator++;
                    }
                }
    
                // Calculate the "Satisfaction Confidence"
                $satisfactionConfidence = ($denominator > 0) ? ($numerator / $denominator * 100) : 0;
    
                // Add debug output
                echo "LHS: " . $LHS . "<br>";
                echo "RHS: " . $RHS . "<br>";
                echo "Numerator: " . $numerator . "<br>";
                echo "Denominator: " . $denominator . "<br>";
                echo "Satisfaction Confidence: " . $satisfactionConfidence . "<br>";                // Create a unique rule string for checking duplicates
                $uniqueRuleString = $LHS . ' => ' . $RHS;
                if (!isset($uniqueRules[$uniqueRuleString])) {
                    // Display the rule only if it is what you want (LHS = Dislike and RHS = Like)
                    if ($isDislike && $isLike && $satisfactionConfidence > 0) {
                        echo '<li>If you <span class="lhs">dislike ' . implode(', ', $LHSBrands) . '</span>, you may instead <span class="rhs">like ' . implode(', ', $RHSBrands) . '</span> <span class="confidence">(Satisfaction Confidence: ';

                        // Calculate the "Satisfaction Confidence" in terms of stars
                        $starRating = '';
                        $percentage = 0;

                        if ($satisfactionConfidence >= 1 && $satisfactionConfidence < 10) {
                            $starRating = '☆☆☆☆☆'; // 0 stars
                            $percentage = 5; // Set the percentage based on your criteria
                        } elseif ($satisfactionConfidence >= 10 && $satisfactionConfidence < 30) {
                            $starRating = '★☆☆☆☆'; // 1 star
                            $percentage = 15; // Set the percentage based on your criteria
                        } elseif ($satisfactionConfidence >= 30 && $satisfactionConfidence < 50) {
                            $starRating = '★★☆☆☆'; // 2 stars
                            $percentage = 40; // Set the percentage based on your criteria
                        } elseif ($satisfactionConfidence >= 50 && $satisfactionConfidence < 70) {
                            $starRating = '★★★☆☆'; // 3 stars
                            $percentage = 60; // Set the percentage based on your criteria
                        } elseif ($satisfactionConfidence >= 70 && $satisfactionConfidence < 90) {
                            $starRating = '★★★★☆'; // 4 stars
                            $percentage = 80; // Set the percentage based on your criteria
                        } elseif ($satisfactionConfidence >= 90) {
                            $starRating = '★★★★★'; // 5 stars
                            $percentage = 100; // Set the percentage based on your criteria
                        } else {
                            $starRating = '☆☆☆☆☆'; // 0 stars
                        }

                        echo $starRating . ' ' . $percentage . '%';
                        echo ')</span></li>';

                        // Mark this rule as seen in the uniqueRules array
                        $uniqueRules[$uniqueRuleString] = true;
                    }
                }
            }
        }
    }

    echo '</ul>';


    $link->close();    // Close the database connection

    ?>
    <?php
    include "../footer.php";
    ?>
</body>
</html>
